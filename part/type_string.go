// Code generated by "stringer -type=Type"; DO NOT EDIT.

package part

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AccA-0]
	_ = x[AccB-1]
	_ = x[BeastEars-2]
	_ = x[Beard-3]
	_ = x[Clothing-4]
	_ = x[Cloak-5]
	_ = x[Ears-6]
	_ = x[Eyebrows-7]
	_ = x[Eyes-8]
	_ = x[Face-9]
	_ = x[FacialMark-10]
	_ = x[FrontHair-11]
	_ = x[Glasses-12]
	_ = x[Mouth-13]
	_ = x[Nose-14]
	_ = x[RearHair-15]
	_ = x[Tail-16]
	_ = x[Wing-17]
}

const _Type_name = "AccAAccBBeastEarsBeardClothingCloakEarsEyebrowsEyesFaceFacialMarkFrontHairGlassesMouthNoseRearHairTailWing"

var _Type_index = [...]uint8{0, 4, 8, 17, 22, 30, 35, 39, 47, 51, 55, 65, 74, 81, 86, 90, 98, 102, 106}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
